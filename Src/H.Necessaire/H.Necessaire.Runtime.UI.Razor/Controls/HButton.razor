@using H.Necessaire.Runtime.UI.Razor.Abstracts
@using Microsoft.JSInterop
@inherits HRazorComponentBase
@rendermode InteractiveAuto

<button class="h-necessaire @nameof(HButton) h-btn @GetCssClassForRole() @(IsBusy ? "dsbl" : null)" data-action-tag="@ActionTag" @onclick=TriggerClick disabled="@(IsBusy ? "disabled" : null)">
    @ChildContent
</button>

@code {
    [Parameter] public RenderFragment ChildContent { get; set; }
    [Parameter] public string ActionTag { get; set; }
    [Parameter] public Func<Task> OnClick { get; set; }
    [Parameter] public UIRole Role { get; set; } = UIRole.Unspecified;

    async Task TriggerClick()
    {
        if (IsBusy)
            return;

        using (BusyScope())
        {
            if (OnClick is not null)
            {
                await HSafe.Run(OnClick).LogError(log, ActionTag.IfEmpty($"{nameof(HButton)}.TriggerClick()"));
            }
        }
    }

    string GetCssClassForRole()
    {
        return
            Role switch
            {
                UIRole.Danger => "dngr",
                UIRole.Success => "sces",
                UIRole.Warning => "wrng",
                UIRole.Info => "info",
                UIRole.Mute => "mute",
                UIRole.Unspecified => null,
                _ => null,
            }
            ;
    }
}
