switch (expression.NodeType)
{
    case ExpressionType.Add:
    case ExpressionType.AddChecked:
    case ExpressionType.And:
    case ExpressionType.AndAlso:
    case ExpressionType.ArrayLength:
    case ExpressionType.ArrayIndex:
    case ExpressionType.Call:
    case ExpressionType.Coalesce:
    case ExpressionType.Conditional:
    case ExpressionType.Constant:
    case ExpressionType.Convert:
    case ExpressionType.ConvertChecked:
    case ExpressionType.Divide:
    case ExpressionType.Equal:
    case ExpressionType.ExclusiveOr:
    case ExpressionType.GreaterThan:
    case ExpressionType.GreaterThanOrEqual:
    case ExpressionType.Invoke:
    case ExpressionType.Lambda:
    case ExpressionType.LeftShift:
    case ExpressionType.LessThan:
    case ExpressionType.LessThanOrEqual:
    case ExpressionType.ListInit:
    case ExpressionType.MemberAccess:
    case ExpressionType.MemberInit:
    case ExpressionType.Modulo:
    case ExpressionType.Multiply:
    case ExpressionType.MultiplyChecked:
    case ExpressionType.Negate:
    case ExpressionType.UnaryPlus:
    case ExpressionType.NegateChecked:
    case ExpressionType.New:
    case ExpressionType.NewArrayInit:
    case ExpressionType.NewArrayBounds:
    case ExpressionType.Not:
    case ExpressionType.NotEqual:
    case ExpressionType.Or:
    case ExpressionType.OrElse:
    case ExpressionType.Parameter:
    case ExpressionType.Power:
    case ExpressionType.Quote:
    case ExpressionType.RightShift:
    case ExpressionType.Subtract:
    case ExpressionType.SubtractChecked:
    case ExpressionType.TypeAs:
    case ExpressionType.TypeIs:
    case ExpressionType.Assign:
    case ExpressionType.Block:
    case ExpressionType.DebugInfo:
    case ExpressionType.Decrement:
    case ExpressionType.Dynamic:
    case ExpressionType.Default:
    case ExpressionType.Extension:
    case ExpressionType.Goto:
    case ExpressionType.Increment:
    case ExpressionType.Index:
    case ExpressionType.Label:
    case ExpressionType.RuntimeVariables:
    case ExpressionType.Loop:
    case ExpressionType.Switch:
    case ExpressionType.Throw:
    case ExpressionType.Try:
    case ExpressionType.Unbox:
    case ExpressionType.AddAssign:
    case ExpressionType.AndAssign:
    case ExpressionType.DivideAssign:
    case ExpressionType.ExclusiveOrAssign:
    case ExpressionType.LeftShiftAssign:
    case ExpressionType.ModuloAssign:
    case ExpressionType.MultiplyAssign:
    case ExpressionType.OrAssign:
    case ExpressionType.PowerAssign:
    case ExpressionType.RightShiftAssign:
    case ExpressionType.SubtractAssign:
    case ExpressionType.AddAssignChecked:
    case ExpressionType.MultiplyAssignChecked:
    case ExpressionType.SubtractAssignChecked:
    case ExpressionType.PreIncrementAssign:
    case ExpressionType.PreDecrementAssign:
    case ExpressionType.PostIncrementAssign:
    case ExpressionType.PostDecrementAssign:
    case ExpressionType.TypeEqual:
    case ExpressionType.OnesComplement:
    case ExpressionType.IsTrue:
    case ExpressionType.IsFalse:
    default:
        throw new NotSupportedException($"Expression {expression.NodeType} is not supported");
}